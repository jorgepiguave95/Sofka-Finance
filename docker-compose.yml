name: SofkaFinance

networks:
  backend:
    driver: bridge
  database:
    driver: bridge

volumes:
  sqlserver-data:
  rabbitmq-data:

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    ports:
      - "${MSSQL_PORT}:1433"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "${MSSQL_SA_PASSWORD}"
    volumes:
      - sqlserver-data:/var/opt/mssql
    restart: always
    networks: [database]

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: "/"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks: [backend]

  customers:
    build:
      context: ./src
      dockerfile: Services/Customers/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_NAME: ${DATABASE_NAME_CONSUMER}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${MSSQL_SA_PASSWORD}
    depends_on:
      rabbitmq:
        condition: service_healthy
      sqlserver:
        condition: service_started
    networks: [backend]

  accounts:
    build:
      context: ./src
      dockerfile: Services/Account/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_NAME: ${DATABASE_NAME_ACCOUNT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${MSSQL_SA_PASSWORD}
    depends_on:
      rabbitmq:
        condition: service_healthy
      sqlserver:
        condition: service_started
    networks: [backend]

  gateway:
    build:
      context: ./src
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "${GATEWAY_PORT}:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    depends_on:
      customers:
        condition: service_started
      accounts:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks: [backend]
